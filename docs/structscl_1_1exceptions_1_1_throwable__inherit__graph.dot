digraph "scl::exceptions::Throwable"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="scl::exceptions::Throwable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="std::exception",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="scl::exceptions::Exception",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_exception.html",tooltip="Base class for all regular exceptions. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="scl::exceptions::EmptyOptional\lAccess",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_empty_optional_access.html",tooltip="Exception class used when attempting to access the value of an empty scl::utils::Optional. "];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="scl::exceptions::Invalid\lArgument",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_invalid_argument.html",tooltip="Exception class used when passing an argument that does not respect the preconditions. "];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="scl::exceptions::InvalidCast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_invalid_cast.html",tooltip="Exception class used when a conversion is impossible. "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="scl::exceptions::Invalid\lAnyCast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_invalid_any_cast.html",tooltip="Exception class used when attempting to cast an Any to the wrong type. "];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="scl::exceptions::Invalid\lEitherAccess",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_invalid_either_access.html",tooltip="Exception class used when attempting to access the wrong type stored in an scl::utils::Either. "];
  Node2 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="scl::exceptions::NonNull\lViolation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structscl_1_1exceptions_1_1_non_null_violation.html"];
  Node2 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="scl::exceptions::OutOfBound",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_out_of_bound.html",tooltip="Exception class used when attempting to access elements out of bounds (eg. "];
  Node0 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="scl::exceptions::Runtime\lException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_runtime_exception.html",tooltip="Base class for exceptions that could never be checked at compile-time. "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="scl::exceptions::Invalid\lResource",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structscl_1_1exceptions_1_1_invalid_resource.html",tooltip="Exception class used when a resource is used without specialized traits. "];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="scl::exceptions::Uninitialized\lMemoryAccess",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structscl_1_1exceptions_1_1_uninitialized_memory_access.html",tooltip="Exception class used when trying to access uninitialized memory. "];
}
