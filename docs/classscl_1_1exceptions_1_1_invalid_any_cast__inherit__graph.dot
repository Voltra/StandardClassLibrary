digraph "scl::exceptions::InvalidAnyCast"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="scl::exceptions::Invalid\lAnyCast",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="scl::exceptions::InvalidCast",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_invalid_cast.html",tooltip="Exception class used when a conversion is impossible. "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="scl::exceptions::Exception",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscl_1_1exceptions_1_1_exception.html",tooltip="Base class for all regular exceptions. "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="scl::exceptions::Throwable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structscl_1_1exceptions_1_1_throwable.html",tooltip="Base class of all throwable objects. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="std::exception",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
